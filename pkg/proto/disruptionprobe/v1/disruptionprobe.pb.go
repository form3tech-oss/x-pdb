// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.35.2
// 	protoc        (unknown)
// source: disruptionprobe/v1/disruptionprobe.proto

package disruptionprobe

import (
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	reflect "reflect"
	sync "sync"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

// The request message containing the user's name.
type IsDisruptionAllowedRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	PodName       string `protobuf:"bytes,1,opt,name=pod_name,json=podName,proto3" json:"pod_name,omitempty"`
	PodNamespace  string `protobuf:"bytes,2,opt,name=pod_namespace,json=podNamespace,proto3" json:"pod_namespace,omitempty"`
	XpdbName      string `protobuf:"bytes,3,opt,name=xpdb_name,json=xpdbName,proto3" json:"xpdb_name,omitempty"`
	XpdbNamespace string `protobuf:"bytes,4,opt,name=xpdb_namespace,json=xpdbNamespace,proto3" json:"xpdb_namespace,omitempty"`
}

func (x *IsDisruptionAllowedRequest) Reset() {
	*x = IsDisruptionAllowedRequest{}
	mi := &file_disruptionprobe_v1_disruptionprobe_proto_msgTypes[0]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *IsDisruptionAllowedRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*IsDisruptionAllowedRequest) ProtoMessage() {}

func (x *IsDisruptionAllowedRequest) ProtoReflect() protoreflect.Message {
	mi := &file_disruptionprobe_v1_disruptionprobe_proto_msgTypes[0]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use IsDisruptionAllowedRequest.ProtoReflect.Descriptor instead.
func (*IsDisruptionAllowedRequest) Descriptor() ([]byte, []int) {
	return file_disruptionprobe_v1_disruptionprobe_proto_rawDescGZIP(), []int{0}
}

func (x *IsDisruptionAllowedRequest) GetPodName() string {
	if x != nil {
		return x.PodName
	}
	return ""
}

func (x *IsDisruptionAllowedRequest) GetPodNamespace() string {
	if x != nil {
		return x.PodNamespace
	}
	return ""
}

func (x *IsDisruptionAllowedRequest) GetXpdbName() string {
	if x != nil {
		return x.XpdbName
	}
	return ""
}

func (x *IsDisruptionAllowedRequest) GetXpdbNamespace() string {
	if x != nil {
		return x.XpdbNamespace
	}
	return ""
}

// The response message containing the greetings
type IsDisruptionAllowedResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	IsAllowed bool   `protobuf:"varint,1,opt,name=is_allowed,json=isAllowed,proto3" json:"is_allowed,omitempty"`
	Error     string `protobuf:"bytes,2,opt,name=error,proto3" json:"error,omitempty"`
}

func (x *IsDisruptionAllowedResponse) Reset() {
	*x = IsDisruptionAllowedResponse{}
	mi := &file_disruptionprobe_v1_disruptionprobe_proto_msgTypes[1]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *IsDisruptionAllowedResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*IsDisruptionAllowedResponse) ProtoMessage() {}

func (x *IsDisruptionAllowedResponse) ProtoReflect() protoreflect.Message {
	mi := &file_disruptionprobe_v1_disruptionprobe_proto_msgTypes[1]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use IsDisruptionAllowedResponse.ProtoReflect.Descriptor instead.
func (*IsDisruptionAllowedResponse) Descriptor() ([]byte, []int) {
	return file_disruptionprobe_v1_disruptionprobe_proto_rawDescGZIP(), []int{1}
}

func (x *IsDisruptionAllowedResponse) GetIsAllowed() bool {
	if x != nil {
		return x.IsAllowed
	}
	return false
}

func (x *IsDisruptionAllowedResponse) GetError() string {
	if x != nil {
		return x.Error
	}
	return ""
}

var File_disruptionprobe_v1_disruptionprobe_proto protoreflect.FileDescriptor

var file_disruptionprobe_v1_disruptionprobe_proto_rawDesc = []byte{
	0x0a, 0x28, 0x64, 0x69, 0x73, 0x72, 0x75, 0x70, 0x74, 0x69, 0x6f, 0x6e, 0x70, 0x72, 0x6f, 0x62,
	0x65, 0x2f, 0x76, 0x31, 0x2f, 0x64, 0x69, 0x73, 0x72, 0x75, 0x70, 0x74, 0x69, 0x6f, 0x6e, 0x70,
	0x72, 0x6f, 0x62, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x12, 0x12, 0x64, 0x69, 0x73, 0x72,
	0x75, 0x70, 0x74, 0x69, 0x6f, 0x6e, 0x70, 0x72, 0x6f, 0x62, 0x65, 0x2e, 0x76, 0x31, 0x22, 0xa0,
	0x01, 0x0a, 0x1a, 0x49, 0x73, 0x44, 0x69, 0x73, 0x72, 0x75, 0x70, 0x74, 0x69, 0x6f, 0x6e, 0x41,
	0x6c, 0x6c, 0x6f, 0x77, 0x65, 0x64, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x19, 0x0a,
	0x08, 0x70, 0x6f, 0x64, 0x5f, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x07, 0x70, 0x6f, 0x64, 0x4e, 0x61, 0x6d, 0x65, 0x12, 0x23, 0x0a, 0x0d, 0x70, 0x6f, 0x64, 0x5f,
	0x6e, 0x61, 0x6d, 0x65, 0x73, 0x70, 0x61, 0x63, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x0c, 0x70, 0x6f, 0x64, 0x4e, 0x61, 0x6d, 0x65, 0x73, 0x70, 0x61, 0x63, 0x65, 0x12, 0x1b, 0x0a,
	0x09, 0x78, 0x70, 0x64, 0x62, 0x5f, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x08, 0x78, 0x70, 0x64, 0x62, 0x4e, 0x61, 0x6d, 0x65, 0x12, 0x25, 0x0a, 0x0e, 0x78, 0x70,
	0x64, 0x62, 0x5f, 0x6e, 0x61, 0x6d, 0x65, 0x73, 0x70, 0x61, 0x63, 0x65, 0x18, 0x04, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x0d, 0x78, 0x70, 0x64, 0x62, 0x4e, 0x61, 0x6d, 0x65, 0x73, 0x70, 0x61, 0x63,
	0x65, 0x22, 0x52, 0x0a, 0x1b, 0x49, 0x73, 0x44, 0x69, 0x73, 0x72, 0x75, 0x70, 0x74, 0x69, 0x6f,
	0x6e, 0x41, 0x6c, 0x6c, 0x6f, 0x77, 0x65, 0x64, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65,
	0x12, 0x1d, 0x0a, 0x0a, 0x69, 0x73, 0x5f, 0x61, 0x6c, 0x6c, 0x6f, 0x77, 0x65, 0x64, 0x18, 0x01,
	0x20, 0x01, 0x28, 0x08, 0x52, 0x09, 0x69, 0x73, 0x41, 0x6c, 0x6c, 0x6f, 0x77, 0x65, 0x64, 0x12,
	0x14, 0x0a, 0x05, 0x65, 0x72, 0x72, 0x6f, 0x72, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x05,
	0x65, 0x72, 0x72, 0x6f, 0x72, 0x32, 0x92, 0x01, 0x0a, 0x16, 0x44, 0x69, 0x73, 0x72, 0x75, 0x70,
	0x74, 0x69, 0x6f, 0x6e, 0x50, 0x72, 0x6f, 0x62, 0x65, 0x53, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65,
	0x12, 0x78, 0x0a, 0x13, 0x49, 0x73, 0x44, 0x69, 0x73, 0x72, 0x75, 0x70, 0x74, 0x69, 0x6f, 0x6e,
	0x41, 0x6c, 0x6c, 0x6f, 0x77, 0x65, 0x64, 0x12, 0x2e, 0x2e, 0x64, 0x69, 0x73, 0x72, 0x75, 0x70,
	0x74, 0x69, 0x6f, 0x6e, 0x70, 0x72, 0x6f, 0x62, 0x65, 0x2e, 0x76, 0x31, 0x2e, 0x49, 0x73, 0x44,
	0x69, 0x73, 0x72, 0x75, 0x70, 0x74, 0x69, 0x6f, 0x6e, 0x41, 0x6c, 0x6c, 0x6f, 0x77, 0x65, 0x64,
	0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x2f, 0x2e, 0x64, 0x69, 0x73, 0x72, 0x75, 0x70,
	0x74, 0x69, 0x6f, 0x6e, 0x70, 0x72, 0x6f, 0x62, 0x65, 0x2e, 0x76, 0x31, 0x2e, 0x49, 0x73, 0x44,
	0x69, 0x73, 0x72, 0x75, 0x70, 0x74, 0x69, 0x6f, 0x6e, 0x41, 0x6c, 0x6c, 0x6f, 0x77, 0x65, 0x64,
	0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x00, 0x42, 0xc4, 0x01, 0x0a, 0x16, 0x63,
	0x6f, 0x6d, 0x2e, 0x64, 0x69, 0x73, 0x72, 0x75, 0x70, 0x74, 0x69, 0x6f, 0x6e, 0x70, 0x72, 0x6f,
	0x62, 0x65, 0x2e, 0x76, 0x31, 0x42, 0x14, 0x44, 0x69, 0x73, 0x72, 0x75, 0x70, 0x74, 0x69, 0x6f,
	0x6e, 0x70, 0x72, 0x6f, 0x62, 0x65, 0x50, 0x72, 0x6f, 0x74, 0x6f, 0x50, 0x01, 0x5a, 0x2b, 0x67,
	0x69, 0x74, 0x68, 0x75, 0x62, 0x2e, 0x63, 0x6f, 0x6d, 0x2f, 0x78, 0x2d, 0x70, 0x64, 0x62, 0x2f,
	0x70, 0x6b, 0x67, 0x2f, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x73, 0x2f, 0x64, 0x69, 0x73, 0x72, 0x75,
	0x70, 0x74, 0x69, 0x6f, 0x6e, 0x70, 0x72, 0x6f, 0x62, 0x65, 0xa2, 0x02, 0x03, 0x44, 0x58, 0x58,
	0xaa, 0x02, 0x12, 0x44, 0x69, 0x73, 0x72, 0x75, 0x70, 0x74, 0x69, 0x6f, 0x6e, 0x70, 0x72, 0x6f,
	0x62, 0x65, 0x2e, 0x56, 0x31, 0xca, 0x02, 0x12, 0x44, 0x69, 0x73, 0x72, 0x75, 0x70, 0x74, 0x69,
	0x6f, 0x6e, 0x70, 0x72, 0x6f, 0x62, 0x65, 0x5c, 0x56, 0x31, 0xe2, 0x02, 0x1e, 0x44, 0x69, 0x73,
	0x72, 0x75, 0x70, 0x74, 0x69, 0x6f, 0x6e, 0x70, 0x72, 0x6f, 0x62, 0x65, 0x5c, 0x56, 0x31, 0x5c,
	0x47, 0x50, 0x42, 0x4d, 0x65, 0x74, 0x61, 0x64, 0x61, 0x74, 0x61, 0xea, 0x02, 0x13, 0x44, 0x69,
	0x73, 0x72, 0x75, 0x70, 0x74, 0x69, 0x6f, 0x6e, 0x70, 0x72, 0x6f, 0x62, 0x65, 0x3a, 0x3a, 0x56,
	0x31, 0x62, 0x06, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x33,
}

var (
	file_disruptionprobe_v1_disruptionprobe_proto_rawDescOnce sync.Once
	file_disruptionprobe_v1_disruptionprobe_proto_rawDescData = file_disruptionprobe_v1_disruptionprobe_proto_rawDesc
)

func file_disruptionprobe_v1_disruptionprobe_proto_rawDescGZIP() []byte {
	file_disruptionprobe_v1_disruptionprobe_proto_rawDescOnce.Do(func() {
		file_disruptionprobe_v1_disruptionprobe_proto_rawDescData = protoimpl.X.CompressGZIP(file_disruptionprobe_v1_disruptionprobe_proto_rawDescData)
	})
	return file_disruptionprobe_v1_disruptionprobe_proto_rawDescData
}

var file_disruptionprobe_v1_disruptionprobe_proto_msgTypes = make([]protoimpl.MessageInfo, 2)
var file_disruptionprobe_v1_disruptionprobe_proto_goTypes = []any{
	(*IsDisruptionAllowedRequest)(nil),  // 0: disruptionprobe.v1.IsDisruptionAllowedRequest
	(*IsDisruptionAllowedResponse)(nil), // 1: disruptionprobe.v1.IsDisruptionAllowedResponse
}
var file_disruptionprobe_v1_disruptionprobe_proto_depIdxs = []int32{
	0, // 0: disruptionprobe.v1.DisruptionProbeService.IsDisruptionAllowed:input_type -> disruptionprobe.v1.IsDisruptionAllowedRequest
	1, // 1: disruptionprobe.v1.DisruptionProbeService.IsDisruptionAllowed:output_type -> disruptionprobe.v1.IsDisruptionAllowedResponse
	1, // [1:2] is the sub-list for method output_type
	0, // [0:1] is the sub-list for method input_type
	0, // [0:0] is the sub-list for extension type_name
	0, // [0:0] is the sub-list for extension extendee
	0, // [0:0] is the sub-list for field type_name
}

func init() { file_disruptionprobe_v1_disruptionprobe_proto_init() }
func file_disruptionprobe_v1_disruptionprobe_proto_init() {
	if File_disruptionprobe_v1_disruptionprobe_proto != nil {
		return
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: file_disruptionprobe_v1_disruptionprobe_proto_rawDesc,
			NumEnums:      0,
			NumMessages:   2,
			NumExtensions: 0,
			NumServices:   1,
		},
		GoTypes:           file_disruptionprobe_v1_disruptionprobe_proto_goTypes,
		DependencyIndexes: file_disruptionprobe_v1_disruptionprobe_proto_depIdxs,
		MessageInfos:      file_disruptionprobe_v1_disruptionprobe_proto_msgTypes,
	}.Build()
	File_disruptionprobe_v1_disruptionprobe_proto = out.File
	file_disruptionprobe_v1_disruptionprobe_proto_rawDesc = nil
	file_disruptionprobe_v1_disruptionprobe_proto_goTypes = nil
	file_disruptionprobe_v1_disruptionprobe_proto_depIdxs = nil
}
