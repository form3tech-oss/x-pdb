apiVersion: apps/v1
kind: Deployment
metadata:
  name: {{ include "x-pdb.fullname" . }}
  namespace: {{ include "x-pdb.namespace" . }}
  labels:
    {{- include "x-pdb.labels" . | nindent 4 }}
spec:
  replicas: {{ .Values.replicaCount }}
  selector:
    matchLabels:
      {{- include "x-pdb.selectorLabels" . | nindent 6 }}
  template:
    metadata:
      {{- with .Values.podAnnotations }}
      annotations:
        {{- toYaml . | nindent 8 }}
      {{- end }}
      labels:
        {{- include "x-pdb.selectorLabels" . | nindent 8 }}
    spec:
      {{- with .Values.imagePullSecrets }}
      imagePullSecrets:
        {{- toYaml . | nindent 8 }}
      {{- end }}
      serviceAccountName: {{ include "x-pdb.serviceAccountName" . }}
      automountServiceAccountToken: {{ .Values.automountServiceAccountToken }}
      securityContext:
        {{- toYaml .Values.podSecurityContext | nindent 8 }}
      {{- if .Values.priorityClassName }}
      priorityClassName: {{ .Values.priorityClassName | quote }}
      {{- end }}
      {{- if .Values.hostNetwork }}
      hostNetwork: true
      {{- end }}
      dnsPolicy: {{ .Values.dnsPolicy }}
      containers:
        - name: {{ .Chart.Name }}
          securityContext:
            {{- toYaml .Values.securityContext | nindent 12 }}
          image: "{{ .Values.image.registry }}/{{ .Values.image.repository }}:{{ default .Chart.AppVersion .Values.image.tag }}"
          imagePullPolicy: {{ .Values.image.pullPolicy }}
          command:
          - /x-pdb
          args:
          - "--cluster-id={{ .Values.controller.clusterID }}"
          - "--zap-log-level={{ .Values.controller.log.level }}"
          - "--remote-endpoints={{- join "," .Values.controller.remoteEndpoints }}"
          - "--webhook-certs-dir=/tmp/webhook-cert"
          - "--controller-certs-dir=/tmp/controller-cert"
          - "--webhook-port={{ .Values.controller.webhookPort }}"
          - "--controller-port={{ .Values.controller.controllerPort }}"
          - "--metrics-bind-address=:{{ .Values.controller.metricsPort }}"
          - "--health-probe-bind-address=:{{ .Values.controller.healthProbePort }}"
          {{- range $value := .Values.controller.extraArgs }}
          - {{ $value | quote }}
          {{- end }}
          ports:
            - name: http
              containerPort: {{ .Values.controller.healthProbePort }}
              protocol: TCP
            - name: metrics
              containerPort: {{ .Values.controller.metricsPort }}
              protocol: TCP
            - name: webhook
              containerPort: {{ .Values.controller.webhookPort }}
              protocol: TCP
            - name: controller
              containerPort: {{ .Values.controller.controllerPort }}
              protocol: TCP
          livenessProbe:
            httpGet:
              path: /healthz
              port: http
          readinessProbe:
            httpGet:
              path: /readyz
              port: http
          resources:
            {{- toYaml .Values.resources | nindent 12 }}
          volumeMounts:
            - mountPath: /tmp/webhook-cert
              name: webhook-server-cert
              readOnly: true
            - mountPath: /tmp/controller-cert
              name: controller-cert
              readOnly: true
            {{- with .Values.extraVolumeMounts -}}
              {{ toYaml . | nindent 12 }}
            {{- end }}
      {{- with .Values.nodeSelector }}
      nodeSelector:
        {{- toYaml . | nindent 8 }}
      {{- end }}
      {{- with .Values.affinity }}
      affinity:
        {{- toYaml . | nindent 8 }}
      {{- end }}
      {{- with .Values.tolerations }}
      tolerations:
        {{- toYaml . | nindent 8 }}
      {{- end }}
      volumes:
      {{- if .Values.webhook.tls.certManager.enabled }}
      - name: webhook-server-cert
        secret:
          defaultMode: 420
          secretName: {{ include "x-pdb.fullname" . }}-webhook-cert
      {{- else if .Values.webhook.tls.cert.enabled }}
      - name: webhook-server-cert
        secret:
          defaultMode: 420
          secretName: {{ .Values.webhook.tls.cert.secretName }}
      {{- end }}
      {{- if .Values.controller.tls.certManager.enabled }}
      - name: controller-cert
        secret:
          defaultMode: 420
          secretName: {{ include "x-pdb.fullname" . }}-controller-cert
      {{- else if .Values.controller.tls.cert.enabled }}
      - name: controller-cert
        secret:
          defaultMode: 420
          secretName: {{ .Values.controller.tls.cert.secretName }}
      {{- end }}
      {{- with .Values.extraVolumes -}}
        {{ toYaml . | nindent 6 }}
      {{- end }}
